{"1726680794048":{"actionType":"saveAll","createdAt":"1726680794048","actionID":"1726680794048","userID":"#TEMP","path":"system.capsules.7afb4a91-2a5b-42ff-aebd-05b195034998.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import React Packs\nimport React from 'react';\nimport * as RN from 'react-native';\n\nimport { SafeAreaView, Platform, View } from 'react-native';\nimport { StatusBar } from 'react-native';\n\n// ---------- import Variables Pack\n\n// ---------- import Local Tools\nimport { mapElements } from './mapElements';\n\n// ---------- set Caps Inputs\ntype Tprops = {\n  configData: {\n    screens: any[];\n    initCt: Record<string, any>;\n    arrInitFuncs: (() => void)[];\n  };\n};\n\n// ---------- set Main Component\nexport const Project = ({ configData }: Tprops) => {\n  // ---------- set Data\n  const { screens, arrInitFuncs } = configData;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of arrInitFuncs) await currFunc();\n    };\n\n    callFn().catch(err => console.log('Project Start Functions', { err }));\n  }, []);\n\n  const condWeb = Platform.OS === 'web';\n\n  const baseStl: RN.ViewStyle = {\n    flexDirection: 'column',\n    width: '100%',\n    height: '100%',\n  };\n\n  return (\n    <RN.View style={baseStl}>\n      <SafeAreaView\n        style={{ width: '100%', height: '100%', overflow: 'hidden' }}\n      >\n        {mapElements(screens)}\n\n        <StatusBar barStyle={'light-content'} />\n      </SafeAreaView>\n    </RN.View>\n  );\n};\n","newValue":"// ---------- import React Packs\nimport React from 'react';\nimport * as RN from 'react-native';\n\nimport { SafeAreaView, Platform, View } from 'react-native';\nimport { StatusBar } from 'react-native';\n\n// ---------- import Variables Pack\n\n// ---------- import Local Tools\nimport { mapElements } from './mapElements';\n\n// ---------- set Caps Inputs\ntype Tprops = {\n  configData: {\n    screens: any[];\n    initCt: Record<string, any>;\n    arrInitFuncs: (() => void)[];\n  };\n};\n\n// ---------- set Main Component\nexport const Project = ({ configData }: Tprops) => {\n  // ---------- set Data\n  const { screens, arrInitFuncs } = configData;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of arrInitFuncs) await currFunc();\n    };\n\n    callFn().catch(err => console.log('Project Start Functions', { err }));\n  }, []);\n\n  const condWeb = Platform.OS === 'web';\n\n  const baseStl: RN.ViewStyle = {\n    flexDirection: 'column',\n    width: '100%',\n    height: '100%',\n  };\n\n  return (\n    <RN.View style={baseStl}>\n      <SafeAreaView\n        style={{ width: '100%', height: '100%', overflow: 'hidden' }}\n      >\n        {mapElements(screens)}\n\n        <StatusBar barStyle={'light-content'} />\n      </SafeAreaView>\n    </RN.View>\n  );\n};"}}