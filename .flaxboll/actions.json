{"1725633698861":{"actionType":"saveAll","createdAt":"1725633698861","actionID":"1725633698861","userID":"#TEMP","path":"system.capsules.74bc0504-5e85-419b-b2eb-de2982c1c4ad.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"import { mapElements } from '../../project';\n\n// ItemSeparatorComponent\ntype Tprops_ItemSeparatorComponent = {\n  pass: { component: any[] };\n};\nexport const ItemSeparatorComponent = (\n  props: Tprops_ItemSeparatorComponent,\n) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ItemSeparatorComponent: () => <>{children}</> };\n};\n\n// ListFooterComponent\ntype Tprops_ListFooterComponent = {\n  pass: { component: any[] };\n};\nexport const ListFooterComponent = (props: Tprops_ListFooterComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListFooterComponent: () => <>{children}</> };\n};\n\n// ListFooterComponentStyle\ntype Tprops_ListFooterComponentStyle = {\n  pass: { styles: any[] };\n};\nexport const ListFooterComponentStyle = (\n  props: Tprops_ListFooterComponentStyle,\n) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { ListFooterComponentStyle: styles };\n};\n\n// ListHeaderComponent\ntype Tprops_ListHeaderComponent = {\n  pass: { component: any[] };\n};\nexport const ListHeaderComponent = (props: Tprops_ListHeaderComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListHeaderComponent: () => <>{children}</> };\n};\n\n// ListHeaderComponentStyle\ntype Tprops_ListHeaderComponentStyle = {\n  pass: { styles: any };\n};\nexport const ListHeaderComponentStyle = (\n  props: Tprops_ListHeaderComponentStyle,\n) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { ListHeaderComponentStyle: styles };\n};\n\n// columnWrapperStyle\ntype Tprops_columnWrapperStyle = {\n  pass: { styles: any };\n};\nexport const columnWrapperStyle = (props: Tprops_columnWrapperStyle) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { columnWrapperStyle: styles };\n};\n\n// extraData\ntype Tprops_extraData = { pass: { data: any } };\nexport const extraData = (props: Tprops_extraData) => {\n  const { data } = props.pass;\n\n  console.log({ data });\n\n  return { extraData: data };\n};\n\n// getItemLayout\ntype Tprops_getItemLayout = {\n  pass: { func: any };\n};\nexport const getItemLayout = (props: Tprops_getItemLayout) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { getItemLayout: func };\n};\n\n// horizontal\ntype Tprops_horizontal = {\n  pass: { boolean: any };\n};\nexport const horizontal = (props: Tprops_horizontal) => {\n  const { boolean } = props.pass;\n\n  const toBoolean = boolean.join() === 'true';\n\n  console.log({ toBoolean });\n\n  return { horizontal: toBoolean };\n};\n\n// initialScrollIndex\ntype Tprops_initialScrollIndex = {\n  pass: { index: any };\n};\nexport const initialScrollIndex = (props: Tprops_initialScrollIndex) => {\n  const { index } = props.pass;\n\n  console.log({ index });\n\n  return { initialScrollIndex: index };\n};\n\n// inverted\ntype Tprops_inverted = { pass: { boolean: any } };\nexport const inverted = (props: Tprops_inverted) => {\n  const { boolean } = props.pass;\n\n  console.log({ boolean });\n\n  return { inverted: boolean };\n};\n\n// keyExtractor\ntype Tprops_keyExtractor = {\n  pass: { func: any };\n};\nexport const keyExtractor = (props: Tprops_keyExtractor) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { keyExtractor: func };\n};\n\n// onRefresh\ntype Tprops_onRefresh = { pass: { func: any } };\nexport const onRefresh = (props: Tprops_onRefresh) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { onRefresh: func };\n};\n\n// ListEmptyComponent\ntype Tprops_ListEmptyComponent = {\n  pass: { component: any[] };\n};\nexport const ListEmptyComponent = (props: Tprops_ListEmptyComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListEmptyComponent: () => <>{children}</> };\n};\n\n// onEndReachedThreshold\ntype Tprops_onEndReachedThreshold = {\n  pass: { A: any; B: any; C: any; D: any; args: any };\n};\nexport const onEndReachedThreshold = (props: Tprops_onEndReachedThreshold) => {\n  const { A, B, C, D, args } = props.pass;\n\n  console.log({ A });\n\n  // return; aqui fica comentado por enquanto\n};\n\n// onEndReached\ntype Tprops_onEndReached = {\n  pass: { A: any; B: any; C: any; D: any; args: any };\n};\nexport const onEndReached = (props: Tprops_onEndReached) => {\n  const { A, B, C, D, args } = props.pass;\n\n  console.log({ A });\n\n  // return; aqui fica comentado por enquanto\n};\n\n// numColumns\ntype Tprops_numColumns = {\n  pass: { numberToEnter: any };\n};\nexport const numColumns = (props: Tprops_numColumns) => {\n  const { numberToEnter } = props.pass;\n  const toNumber = numberToEnter[0].replace('px', '');\n  const toNum = Number(toNumber);\n\n  console.log({ numberToEnter, toNumber, toNum });\n\n  return { numColumns: toNum };\n};\n\n// --------------------------------------\n// --------------------------------------\n// --------------------------------------\n","newValue":"import { mapElements } from '../../project';\n\nItemSeparatorComponent\ntype Tprops_ItemSeparatorComponent = {\n  pass: { component: any[] };\n};\nexport const ItemSeparatorComponent = (\n  props: Tprops_ItemSeparatorComponent,\n) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ItemSeparatorComponent: () => <>{children}</> };\n};\n\n// ListFooterComponent\ntype Tprops_ListFooterComponent = {\n  pass: { component: any[] };\n};\nexport const ListFooterComponent = (props: Tprops_ListFooterComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListFooterComponent: () => <>{children}</> };\n};\n\n// ListFooterComponentStyle\ntype Tprops_ListFooterComponentStyle = {\n  pass: { styles: any[] };\n};\nexport const ListFooterComponentStyle = (\n  props: Tprops_ListFooterComponentStyle,\n) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { ListFooterComponentStyle: styles };\n};\n\n// ListHeaderComponent\ntype Tprops_ListHeaderComponent = {\n  pass: { component: any[] };\n};\nexport const ListHeaderComponent = (props: Tprops_ListHeaderComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListHeaderComponent: () => <>{children}</> };\n};\n\n// ListHeaderComponentStyle\ntype Tprops_ListHeaderComponentStyle = {\n  pass: { styles: any };\n};\nexport const ListHeaderComponentStyle = (\n  props: Tprops_ListHeaderComponentStyle,\n) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { ListHeaderComponentStyle: styles };\n};\n\n// columnWrapperStyle\ntype Tprops_columnWrapperStyle = {\n  pass: { styles: any };\n};\nexport const columnWrapperStyle = (props: Tprops_columnWrapperStyle) => {\n  const { styles } = props.pass;\n\n  console.log({ styles });\n\n  return { columnWrapperStyle: styles };\n};\n\n// extraData\ntype Tprops_extraData = { pass: { data: any } };\nexport const extraData = (props: Tprops_extraData) => {\n  const { data } = props.pass;\n\n  console.log({ data });\n\n  return { extraData: data };\n};\n\n// getItemLayout\ntype Tprops_getItemLayout = {\n  pass: { func: any };\n};\nexport const getItemLayout = (props: Tprops_getItemLayout) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { getItemLayout: func };\n};\n\n// horizontal\ntype Tprops_horizontal = {\n  pass: { boolean: any };\n};\nexport const horizontal = (props: Tprops_horizontal) => {\n  const { boolean } = props.pass;\n\n  const toBoolean = boolean.join() === 'true';\n\n  console.log({ toBoolean });\n\n  return { horizontal: toBoolean };\n};\n\n// initialScrollIndex\ntype Tprops_initialScrollIndex = {\n  pass: { index: any };\n};\nexport const initialScrollIndex = (props: Tprops_initialScrollIndex) => {\n  const { index } = props.pass;\n\n  console.log({ index });\n\n  return { initialScrollIndex: index };\n};\n\n// inverted\ntype Tprops_inverted = { pass: { boolean: any } };\nexport const inverted = (props: Tprops_inverted) => {\n  const { boolean } = props.pass;\n\n  console.log({ boolean });\n\n  return { inverted: boolean };\n};\n\n// keyExtractor\ntype Tprops_keyExtractor = {\n  pass: { func: any };\n};\nexport const keyExtractor = (props: Tprops_keyExtractor) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { keyExtractor: func };\n};\n\n// onRefresh\ntype Tprops_onRefresh = { pass: { func: any } };\nexport const onRefresh = (props: Tprops_onRefresh) => {\n  const { func } = props.pass;\n\n  console.log({ func });\n\n  return { onRefresh: func };\n};\n\n// ListEmptyComponent\ntype Tprops_ListEmptyComponent = {\n  pass: { component: any[] };\n};\nexport const ListEmptyComponent = (props: Tprops_ListEmptyComponent) => {\n  const { component } = props.pass;\n\n  const children = mapElements(component, {});\n\n  return { ListEmptyComponent: () => <>{children}</> };\n};\n\n// onEndReachedThreshold\ntype Tprops_onEndReachedThreshold = {\n  pass: { A: any; B: any; C: any; D: any; args: any };\n};\nexport const onEndReachedThreshold = (props: Tprops_onEndReachedThreshold) => {\n  const { A, B, C, D, args } = props.pass;\n\n  console.log({ A });\n\n  // return; aqui fica comentado por enquanto\n};\n\n// onEndReached\ntype Tprops_onEndReached = {\n  pass: { A: any; B: any; C: any; D: any; args: any };\n};\nexport const onEndReached = (props: Tprops_onEndReached) => {\n  const { A, B, C, D, args } = props.pass;\n\n  console.log({ A });\n\n  // return; aqui fica comentado por enquanto\n};\n\n// numColumns\ntype Tprops_numColumns = {\n  pass: { numberToEnter: any };\n};\nexport const numColumns = (props: Tprops_numColumns) => {\n  const { numberToEnter } = props.pass;\n  const toNumber = numberToEnter[0].replace('px', '');\n  const toNum = Number(toNumber);\n\n  console.log({ numberToEnter, toNumber, toNum });\n\n  return { numColumns: toNum };\n};\n\n// --------------------------------------\n// --------------------------------------\n// --------------------------------------\n"}}